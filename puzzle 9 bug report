Var steps = 0
While (steps < 9) {
	right
  
  Given Var steps = 0, because steps<9, it will go right,  but it will only stop after going right 8 times since the last number to be smaller than 9 is 8. In this case you should use a different method unless you can type the symbol of "smaller than or equal to".
  
	steps = steps + 1
  
  steps = 0 as memory remembers, therefore steps =/= steps + 1. To make steps + 1 possible while steps = 0, you can make a different Var, (e.g. Var X = steps + 1)
}
Var steps = 0
While (steps < 9) {
	down
  
  Given Var steps = 0, because steps<9, it will go right,  but it will only stop after going right 8 times since the last number to be smaller than 9 is 8. In this case you should use a different method unless you can type the symbol of "smaller than or equal to".
	
  steps = steps + 1
  
  steps = 0 as memory remembers, therefore steps =/= steps + 1. To make steps + 1 possible while steps = 0, you can make a different Var, (e.g. Var X = steps + 1)
}
Var steps = 0
While (steps < 9) {
	left
  
  Given Var steps = 0, because steps<9, it will go right,  but it will only stop after going right 8 times since the last number to be smaller than 9 is 8. In this case you should use a different method unless you can type the symbol of "smaller than or equal to".
	
  steps = steps + 1
  
  steps = 0 as memory remembers, therefore steps =/= steps + 1. To make steps + 1 possible while steps = 0, you can make a different Var, (e.g. Var X = steps + 1)
}
Var steps = 0
While (steps < 9) {
	up
  
  Given Var steps = 0, because steps<9, it will go right,  but it will only stop after going right 8 times since the last number to be smaller than 9 is 8. In this case you should use a different method unless you can type the symbol of "smaller than or equal to".
   
   steps = steps + 1
}
  steps = 0 as memory remembers, therefore steps =/= steps + 1. To make steps + 1 possible while steps = 0, you can make a different Var, (e.g. Var X = steps + 1)
